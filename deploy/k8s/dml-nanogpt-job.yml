apiVersion: batch/v1
kind: Job
metadata:
  name: dml-nanogpt-job
  namespace: dml
spec:
  completions: 8 # should be the same as WORLD_SIZE
  parallelism: 8 # should be the same as WORLD_SIZE
  template:
    spec:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "nvidia.com/gpu.memory"
                operator: Gt # (greater than)
                values: ["12000"]
      containers:
      - name: dml-nanogpt-container
        image: hyperdisk.local:9502/eismcc/dml-nanogpt:latest
        imagePullPolicy: Always
        command: ["python3", "train.py", "config/train_gpt2.py"]
        ports:
        - containerPort: 8890
        - containerPort: 8891
        env:
        - name: WORLD_SIZE
          value: "8"  # Set to the parallelism count
        - name: INPUT_PATH
          value: "/data/input/nanogpt"
        - name: OUTPUT_PATH
          value: "/data2/output/nanogpt"
        - name: JOB_UUID
          value: "placeholder-for-uuid"
        - name: PYTORCH_PORT
          value: "8890"
        - name: MODEL_BATCH_SIZE
          value: "12"
        - name: MODEL_BLOCK_SIZE
          value: "512"
        - name: MODEL_NUM_LAYERS
          value: "24"
        - name: MODEL_NUM_HEADS
          value: "16"
        - name: MODEL_EMBEDDING_DIM
          value: "384"
        resources:
          limits:
            nvidia.com/gpu: 1
            # nvidia.com/memory: "12Gi"
          requests:
            nvidia.com/gpu: 1
            # nvidia.com/memory: "12Gi"
        #     cpu: "2"
        #     memory: "16Gi"
        #   requests:
        #     cpu: "1"
        #     memory: "4Gi"
        volumeMounts:
        - mountPath: /data
          name: dml-data
        - mountPath: /data2
          name: dml-data-2
      restartPolicy: Never
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: dml-data
          persistentVolumeClaim:
            claimName: dml-data-pvc
        - name: dml-data-2
          persistentVolumeClaim:
            claimName: dml-data-2-pvc
